.image-container img {
  background: #fff;
  display: block;
  width: auto;
  height: auto;
  margin: 0 auto 20px;
  width: 195px;
}

.deckgrid[deckgrid]::before {
  /* Specifies that the grid should have a maximum of 4 columns. Each column will have the classes 'column' and 'column-1-4' */
  content: '10 .column.column-1-10';
  font-size: 0; /* See https://github.com/akoenig/angular-deckgrid/issues/14#issuecomment-35728861 */
  visibility: hidden;
}
.deckgrid {
  padding-top: 60px;
  margin: 0 auto;
  width: 100%;
}

.deckgrid md-card {
  min-height: 110px;
}

.deckgrid .column {
  float: left;
  width: $main-card-width;
}

.deckgrid .column-1-4 {
  width: $main-card-width;
}

.deckgrid .column.size-1-5,
.deckgrid .column.size-1-6,
.deckgrid .column.size-1-7,
.deckgrid .column.size-1-8,
.deckgrid .column.size-1-9,
.deckgrid .column.size-1-10 {
  width: $main-card-width;
}

.deckgrid .column.size-1-4 {
  width: $main-card-width;
}

.deckgrid .column.size-1-3 {
  width: $main-card-width;
}

.deckgrid .column.size-1-2 {
  width: $main-card-width;
}

.deckgrid .column.size-1-1 {
  width: $main-card-width;
}

@media screen and (min-width: 2310px)  and (max-width: 5120px) {
  .deckgrid {
    margin-top: 100px;
    width: $main-card-width*7;
  }

  .deckgrid[deckgrid]::before {
    content: '7 .column.size-1-7';
  }
}

@media screen and (min-width: (($main-card-width*7)+50)) and (max-width: (($main-card-width*8)+50)) {
  .deckgrid {
    margin-top: 100px;
    width: $main-card-width*7;
  }

  .deckgrid[deckgrid]::before {
    content: '7 .column.size-1-7';
  }
}

@media screen and (min-width: (($main-card-width*6)+50)) and (max-width: (($main-card-width*7)+50)) {
  .deckgrid {
    margin-top: 100px;
    width: $main-card-width*6;
  }

  .deckgrid[deckgrid]::before {
    content: '6 .column.size-1-6';
  }
}

@media screen and (min-width: (($main-card-width*5)+50)) and (max-width: (($main-card-width*6)+50)) {
  .deckgrid {
    margin-top: 100px;
    width: $main-card-width*5;
  }

  .deckgrid[deckgrid]::before {
    content: '5 .column.size-1-5';
  }
}

@media screen and (min-width: (($main-card-width*4)+50)) and (max-width: (($main-card-width*5)+50)) {
  .deckgrid {
    margin-top: 100px;
    width: $main-card-width*4;
  }

  .deckgrid[deckgrid]::before {
    content: '4 .column.size-1-4';
  }
}

@media screen and (min-width: (($main-card-width*3)+50)) and (max-width: (($main-card-width*4)+50)) {
  .deckgrid {
    margin-top: 70px;
    width: $main-card-width*3;
  }

  .deckgrid[deckgrid]::before {
    content: '3 .column.size-1-3';
  }
}

@media screen and (min-width: (($main-card-width*2)+50)) and (max-width: (($main-card-width*3)+50)) {
  .deckgrid {
    margin-top: 30px;
    width: $main-card-width*2;
  }

  .deckgrid[deckgrid]::before {
    content: '2 .column.size-1-2';
  }
}

@media screen and (min-width: (($main-card-width*1)+50)) and (max-width: (($main-card-width*2)+50)) {
  .deckgrid {
    width: $main-card-width*1;
  }

  .deckgrid[deckgrid]::before {
    content: '1 .column.size-1-1';
  }
}

/*@media screen and (max-width: 900px) {
  .deckgrid {
    width:630px;
  }

  .deckgrid[deckgrid]::before {
    content: '3 .column.size-1-3';
  }
}

@media screen and (min-width: 481px) and (max-width: 768px) {
  .deckgrid {
    margin:100px auto;
    width:500px;
  }

  .deckgrid[deckgrid]::before {
    content: '2 .column.size-1-2';
  }
}*/

/*@media only screen and (max-device-width : 320px),
only screen and (max-width : 480px) {

  .l-header {
    font-size:80%;
    margin-top:145px;
    padding:5px;
    text-align:center;
  }

  .deckgrid {
    width:280px;
  }

  .deckgrid[deckgrid]::before {
    content: '1 .column.size-1-1';
  }
}*/

.image-container {
  overflow-x: hidden;
}

md-card {
  position: relative;
}

md-card md-card-title md-card-title-text:only-child .md-subhead.secondary-subhead {
  padding: 0;
}

md-card md-card-title md-card-title-text .md-headline {
  /*margin-top: 15px;*/
  bottom: 15px;
  position: absolute;
  word-break: break-all;
  font-size: 18px;
  line-height: 24px;
  color: #310055;
}

.collection-text .md-headline {
  font-size: 16px;
}

.card-count {
  position: absolute;
  top: 5px;
  right: 5px;
  border-radius: 50%;
  padding: 4px 10px;
  color: #fff;
}

.card-count-list {
  position: absolute;
  top: 5px;
  right: 10px;
  border-radius: 50%;
  height: 32px;
  width: 32px;
  text-align: center;
  /*box-shadow: 0 0 0 1px #ccc;*/
  font-size: 12px;
  line-height: 32px;
  color: #fff;
}

.list-offsets {
  padding-top:42px;
}

.count-customer {
  background: #61003f !important;
}

.count-project {
  background: #547700 !important;
}

.count-workflow {
  background: #82b700 !important;
}

.count-other {
  background: #4b0082 !important;
}

.count-another {
  background: #310055 !important;
}

.card-details {
  color: #fff;
}

.md-padding {
    padding-bottom: 65px;
}

/*.layout-padding  {
  padding-top: 40px;
}*/

.card-details.first-level {
  background: #960061;
}

.card-details.second-level {
  background: #310055;
}

.card-details.third-level {
  background: #82b700;
}

.card-details-button.download-button {
 font-size: 1.6em;
}

.card-details-button.edit-button {
  font-size: 1.4em;
}

.card-details, .main-card {
  transform-style: preserve-3d;
  /*backface-visibility: hidden;*/
}

.card-details.ng-hide-remove,
.card-details.ng-hide-remove * {
  -webkit-animation:0.3s show;
  animation:0.3s show;
}

.main-card.ng-hide-remove,
.main-card.ng-hide-remove * {
  -webkit-animation:0.3s show;
  animation:0.3s show;
}

.card-title-mod {
  padding-right: 12px;
  padding-left: 10px;
  font-size: 16px !important;
}

.footer-bar {
  display: none;
}

@keyframes show {
  0% {
    opacity:0;
    transform: scale(0.5);
  }
  70% {
    transform: scale(1.02);
  }
  100% {
    opacity:1;
    transform: scale(1);
  }
  /*0% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transition-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);

  }

  100% {
    transform: perspective(400px);
  }*/

  /*0%{
    -webkit-transform: rotateY(0deg);
    transform: rotateY(0deg);
  }
  50% {
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
  }
  100%{
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
  }*/
}

